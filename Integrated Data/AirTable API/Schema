{
  "openapi": "3.1.0",
  "info": {
    "title": "Airtable API",
    "description": "Airtable API to list records, create records, list bases, and get the schema of tables.",
    "version": "v1.0.0"
  },
  "servers": [
    {
      "url": "https://api.airtable.com/v0"
    }
  ],
  "paths": {
    "/{baseId}/{tableName}/listRecords": {
      "post": {
        "description": "Get records from a specific Airtable table",
        "operationId": "ListAirtableRecords",
        "parameters": [
          {
            "name": "baseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The Airtable base ID"
          },
          {
            "name": "tableName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The name of the Airtable table"
          }
        ],
        "requestBody": {
          "description": "Parameters for listing records",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "maxRecords": {
                    "type": "integer",
                    "default": 100,
                    "description": "The maximum number of records to return"
                  },
                  "view": {
                    "type": "string",
                    "description": "The name or ID of a view in the table"
                  },
                  "filterByFormula": {
                    "type": "string",
                    "description": "A formula used to filter records"
                  },
                  "sort": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "field": {
                          "type": "string",
                          "description": "The name of the field to sort by"
                        },
                        "direction": {
                          "type": "string",
                          "enum": ["asc", "desc"],
                          "description": "The direction to sort (ascending or descending)"
                        }
                      },
                      "required": ["field", "direction"]
                    },
                    "description": "Sort records by fields"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "records": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The record ID"
                          },
                          "fields": {
                            "type": "object",
                            "description": "The fields of the record"
                          },
                          "createdTime": {
                            "type": "string",
                            "format": "date-time",
                            "description": "The time when the record was created"
                          }
                        },
                        "required": ["id", "fields", "createdTime"]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/meta/bases": {
      "get": {
        "description": "List bases you have access to",
        "operationId": "ListAirtableBases",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "bases": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The base ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the base"
                          },
                          "permissionLevel": {
                            "type": "string",
                            "description": "The permission level"
                          }
                        },
                        "required": ["id", "name", "permissionLevel"]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/meta/bases/{baseId}/tables": {
      "get": {
        "description": "Get the schema of the tables in a specified base",
        "operationId": "GetAirtableBaseSchema",
        "parameters": [
          {
            "name": "baseId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The Airtable base ID"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tables": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "description": "The table ID"
                          },
                          "name": {
                            "type": "string",
                            "description": "The name of the table"
                          },
                          "primaryFieldId": {
                            "type": "string",
                            "description": "The primary field ID"
                          },
                          "fields": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "description": "The field ID"
                                },
                                "name": {
                                  "type": "string",
                                  "description": "The name of the field"
                                },
                                "type": {
                                  "type": "string",
                                  "description": "The type of the field"
                                }
                              },
                              "required": ["id", "name", "type"]
                            }
                          }
                        },
                        "required": ["id", "name", "primaryFieldId", "fields"]
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "Bearer token for Airtable API"
      }
    },
    "schemas": {}
  }
}
